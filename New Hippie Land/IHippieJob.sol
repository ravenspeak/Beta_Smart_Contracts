// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;
interface IHippieJob {
  function Buy ( string memory jobName, address buyer ) external;
  function approve ( address to, uint256 tokenId ) external;
  function balanceOf ( address owner ) external view returns ( uint256 );
  function builtAtBlock ( uint256 ) external view returns ( uint256 );
  function collaterals ( string memory ) external view returns ( address );
  function feeMap ( uint256 ) external view returns ( uint256 fee, address receiver );
  function getApproved ( uint256 tokenId ) external view returns ( address );
  function getPlay2Earn (  ) external view returns ( address, uint256 );
  function initialize (  ) external;
  function isApprovedForAll ( address owner, address operator ) external view returns ( bool );
  function name (  ) external view returns ( string memory);
  function owner (  ) external view returns ( address );
  function ownerOf ( uint256 tokenId ) external view returns ( address );
  function pause (  ) external;
  function paused (  ) external view returns ( bool );
  function renounceOwnership (  ) external;
  function safeMint ( address to ) external;
  function safeTransferFrom ( address from, address to, uint256 tokenId ) external;
  function safeTransferFrom ( address from, address to, uint256 tokenId, bytes memory _data ) external;
  function saleEnabled ( string memory jobName, bool status ) external;
  function setApprovalForAll ( address operator, bool approved ) external;
  function setJobProps ( uint256 typeID, string memory jobName, uint256 salaryRate, uint256 slots, address collateral, uint256 price, bool isOnSale, string memory fullURI ) external;
  function setBuiltBlock ( uint256 blockNumber, uint256 jobID ) external;
  function setBurnFee ( address addr, uint256 fee ) external;
  function setCollateral ( string memory bName, address collateralAddress ) external;
  function setDevelopersFee ( address addr, uint256 fee ) external;
  function setGameEcosysFee ( address addr, uint256 fee ) external;
  function setLiquidityFee ( address addr, uint256 fee ) external;
  function setMarketingFee ( address addr, uint256 fee ) external;
  function setPlay2Earn ( address addr, uint256 fee ) external;
  function setPrice ( string memory jobName, uint256 price_ ) external;
  function setTokenURI ( string memory fullURI, uint256 tokenId ) external;
  function supportsInterface ( bytes4 interfaceId ) external view returns ( bool );
  function symbol (  ) external view returns ( string memory );
  function tokenByIndex ( uint256 index ) external view returns ( uint256 );
  function tokenOfOwnerByIndex ( address owner, uint256 index ) external view returns ( uint256 );
  function tokenURI ( uint256 tokenId ) external view returns ( string memory);
  function totalSupply (  ) external view returns ( uint256 );
  function transferFrom ( address from, address to, uint256 tokenId ) external;
  function transferOwnership ( address newOwner ) external;
  function unpause (  ) external;
  function upgradeTo ( address newImplementation ) external;
  function upgradeToAndCall ( address newImplementation, bytes memory data ) external;
  function typeOfJobByNFTId (uint256 u) external returns(string memory);
  function jProps (string memory p) external returns(uint256 typeID, string memory jobName, uint256 salaryRate, uint256 slots, address collateral, uint256 price, bool saleEnabled, string memory fullURI);
  function getTypeIDByNftID(uint256 nftId) external returns (uint256);
}